{"version":3,"sources":["components/Sidebar.js","components/Layout.js","api/posts.js","components/Markdown.js","components/Blog.js","api/models.js","components/Demo.js","components/PostList.js","App.js","serviceWorker.js","index.js"],"names":["n","styles","theme","body","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","marginTop","marginBottom","breakpoints","up","toolbar","padding","borderBottom","concat","palette","grey","title","diplay","titleText","textAlign","fontFamily","fontSize","sections","display","section","link","margin","grow","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","common","white","&:hover","down","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","mobileRoot","drawerPaper","menuButton","mobileSections","footer","background","paper","name","url","icon","react_default","a","createElement","Translate_default","Apps_default","external","Code_default","Fingerprint_default","Person_default","MobileHeader","withStyles","_ref","classes","_useState","useState","_useState2","slicedToArray","open","setOpen","className","AppBar_default","Toolbar_default","mobileToolbar","Typography_default","component","variant","noWrap","Search_default","InputBase_default","placeholder","root","input","IconButton_default","aria-label","onClick","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","List_default","map","ListItem_default","button","key","RouteLink","to","ListItemIcon_default","ListItemText_default","primary","Divider_default","Footer","_ref2","align","Link_default","href","Header","_ref3","target","Layout","_ref4","children","Fragment","CssBaseline_default","useMediaQuery","getLatestPost","asyncToGenerator","regenerator_default","mark","_callee","rep","wrap","_context","prev","next","axios","sent","abrupt","data","stop","this","apply","arguments","getPostsByMonth","_callee2","month","_context2","_x","options","overrides","h1","props","assign","gutterBottom","h2","h3","h4","paragraph","p","li","listItem","code","objectWithoutProperties","Markdown","useEffect","hljs","initHighlighting","esm","sidebarAboutBox","sidebarSection","archives","R","i","m","moment","subtract","str","format","socials","Sidebar","Grid_default","item","xs","md","Paper_default","elevation","archive","social","rel","mainFeaturedPost","mainFeaturedPostContent","head","headTitle","headDate","bottom","right","mainGrid","card","cardDetails","flex","cardMedia","markdown","MainFeaturedPost","post","setPost","_useState3","_useState4","loading","setLoading","fetchPost","date","container","index_es","MainContent","Card_default","CardContent_default","description","Hidden_default","xsDown","CardMedia_default","image","_useState5","_useState6","_useState7","_useState8","_ref5","components_Markdown","content","components_Sidebar","predictCaptcha","file","formData","config","FormData","append","headers","content-type","genCaptcha","_callee3","_context3","Date","getTime","method","responseType","demo","captchaTitle","captchaTitleText","media","actions","uploadButton","predictButton","tablePaper","table","loadingProgress","summary","formatBox","box","bbox","Math","round","String","join","confidence","toFixed","char","label","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","push","Blob","type","Demo","files","setFiles","predict","setPredict","preview","setPreview","then","blob","File","URL","createObjectURL","detections","img","sm","CardActions_default","disableActionSpacing","Button_default","Refresh_default","es","multiple","accept","onDrop","console","log","disableClick","getRootProps","getInputProps","CloudUpload_default","Table_default","TableBody_default","TableRow_default","TableCell_default","match","params","posts","setPosts","fetchPosts","PostList_MainContent","registerLanguage","python","createMuiTheme","typography","useNextVariants","About","App","MuiThemeProvider_default","BrowserRouter","components_Layout","Route","exact","path","Blog","PostList","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iKAqBwBA,0cCSlBC,GAAS,SAAAC,GAAK,MAAK,CACrBC,KAAKC,OAAAC,EAAA,EAAAD,CAAA,CACDE,MAAO,OACPC,WAAiC,EAArBL,EAAMM,QAAQC,KAC1BC,YAAkC,EAArBR,EAAMM,QAAQC,KAC3BE,UAAgC,GAArBT,EAAMM,QAAQC,KACzBG,aAAmC,EAArBV,EAAMM,QAAQC,MAC3BP,EAAMW,YAAYC,GAAG,KAA4B,EAArBZ,EAAMM,QAAQC,KAAW,GAAK,CACvDH,MAAO,KACPK,UAAgC,GAArBT,EAAMM,QAAQC,KACzBF,WAAY,OACZG,YAAa,SAGrBK,QAAQX,OAAAC,EAAA,EAAAD,CAAA,CACJY,QAAS,EACTT,WAAiC,EAArBL,EAAMM,QAAQC,KAC1BC,YAAkC,EAArBR,EAAMM,QAAQC,KAC3BQ,aAAY,aAAAC,OAAehB,EAAMiB,QAAQC,KAAK,OAC7ClB,EAAMW,YAAYC,GAAG,KAA4B,EAArBZ,EAAMM,QAAQC,KAAW,GAAK,CACvDH,MAAO,KACPC,WAAY,OACZG,YAAa,SAGrBW,MAAO,CACHC,OAAQ,QAEZC,UAAW,CACPC,UAAW,SACXC,WAAY,QACZC,SAAU,IAEdC,SAASvB,OAAAC,EAAA,EAAAD,CAAA,CACLG,WAAiC,EAArBL,EAAMM,QAAQC,MACzBP,EAAMW,YAAYC,GAAG,MAAQ,CAC1Bc,QAAS,SAGjBC,QAAS,CACLH,SAAU,GACVnB,WAAiC,EAArBL,EAAMM,QAAQC,KAC1BC,YAAkC,EAArBR,EAAMM,QAAQC,MAE/BqB,KAAM,CACFC,OAAQ7B,EAAMM,QAAQC,MAE1BuB,KAAM,CACFC,SAAU,GAEdC,OAAO9B,OAAAC,EAAA,EAAAD,CAAA,CACH+B,SAAU,WACVC,aAAclC,EAAMmC,MAAMD,aAC1BE,gBAAiBC,eAAKrC,EAAMiB,QAAQqB,OAAOC,MAAO,IAClDC,UAAW,CACPJ,gBAAiBC,eAAKrC,EAAMiB,QAAQqB,OAAOC,MAAO,MAErDvC,EAAMW,YAAY8B,KAAK,KAAO,CAC3BL,gBAAiB,YAGzBM,WAAWxC,OAAAC,EAAA,EAAAD,CAAA,CACPE,MAA4B,EAArBJ,EAAMM,QAAQC,KACrBoC,OAAQ,OACRV,SAAU,WACVW,cAAe,OACflB,QAAS,OACTmB,WAAY,SACZC,eAAgB,UACf9C,EAAMW,YAAY8B,KAAK,KAAO,CAC3BrC,MAA4B,EAArBJ,EAAMM,QAAQC,OAG7BwC,UAAW,CACP3C,MAAO,OACP4C,MAAO,WAEXC,WAAW/C,OAAAC,EAAA,EAAAD,CAAA,CACPgD,WAAYlD,EAAMM,QAAQC,KAC1B4C,aAAcnD,EAAMM,QAAQC,KAC5B6C,cAAepD,EAAMM,QAAQC,KAC7B8C,YAAkC,EAArBrD,EAAMM,QAAQC,KAC3B+C,WAAYtD,EAAMuD,YAAYC,OAAO,UACpCxD,EAAMW,YAAY8B,KAAK,KAAO,CAC3BY,YAAkC,EAArBrD,EAAMM,QAAQC,KAC3BH,MAAO,EACPqD,UAAW,CACPrD,MAAO,OAInBsD,WAAY,CACRtD,MAAO,QAUXuD,YAAa,CACTvD,MAAO,KAEXwD,WAAY,CACRlC,QAAS,QAEbmC,eAAgB,CACZrC,SAAU,IAEdsC,OAAQ,CACJ1B,gBAAiBpC,EAAMiB,QAAQ8C,WAAWC,MAC1CvD,UAAgC,EAArBT,EAAMM,QAAQC,KACzBO,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,WAITkB,GAAW,CACb,CACIwC,KAAM,OACNC,IAAG,IACHC,KAAM,kBAAMC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,QAEhB,CACIJ,KAAM,OACNC,IAAG,QACHC,KAAM,kBAAMC,EAAAC,EAAAC,cAACE,EAAAH,EAAD,QAEhB,CACIJ,KAAM,OACNQ,UAAU,EACVP,IAAG,6BACHC,KAAM,kBAAMC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,QAEhB,CACIJ,KAAM,QACNC,IAAG,SACHC,KAAM,kBAAMC,EAAAC,EAAAC,cAACK,EAAAN,EAAD,QAEhB,CACIJ,KAAM,SACNQ,UAAU,EACVP,IAAG,cACHC,KAAM,kBAAMC,EAAAC,EAAAC,cAACM,EAAAP,EAAD,SAIdQ,GAAeC,qBAAW/E,GAAX+E,CAAmB,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QAAcC,EAC7BC,oBAAS,GADoBC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GAC9CI,EAD8CF,EAAA,GACxCG,EADwCH,EAAA,GAErD,OACIf,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQtB,YACpBU,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQrB,MAAM,WACVoB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAASkB,UAAWP,EAAQU,eACxBtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACIuB,UAAU,KACVC,QAAQ,KACRN,UAAWP,EAAQ7D,MACnB2E,QAAM,GAEN1B,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQ3D,WAAxB,UAIJ+C,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQlD,OACxBsC,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQhD,QACpBoC,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQtC,YACpB0B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,OAEJD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACI4B,YAAY,eACZjB,QAAS,CACLkB,KAAMlB,EAAQjC,UACdoD,MAAOnB,EAAQ/B,eAI3BmB,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQpB,YACpBQ,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACIgC,aAAW,cACXC,QAAS,kBAAMhB,GAAQ,KAEvBlB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,UAMhBD,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACIgB,KAAMA,EACNoB,QAAS,kBAAMnB,GAAQ,IACvBN,QAAS,CACLhB,MAAOgB,EAAQrB,cAGnBS,EAAAC,EAAAC,cAAA,OACIoC,SAAU,EACVC,KAAK,SACLL,QAAS,kBAAMhB,GAAQ,IACvBsB,UAAW,kBAAMtB,GAAQ,KAEzBlB,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACK5C,GAASqF,IAAI,SAAAnF,GAAO,OACjByC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAU2C,QAAM,EAACC,IAAKtF,EAAQsC,KAAM2B,UAAWsB,KAAWC,GAAIxF,EAAQuC,KAClEE,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,KAAe1C,EAAQwC,QACvBC,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAciD,QACVlD,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQnB,gBACnBlC,EAAQsC,WAMzBG,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,YAQlBmD,GAAS1C,qBAAW/E,GAAX+E,CAAmB,SAAA2C,GAAiB,IAAdzC,EAAcyC,EAAdzC,QACjC,OACIZ,EAAAC,EAAAC,cAAA,UAAQiB,UAAWP,EAAQlB,QACvBM,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,YAAY6B,MAAM,SAAS1E,MAAM,gBAAgB4C,UAAU,KAA/E,4BAC0BxB,EAAAC,EAAAC,cAAA,WAD1B,+BAEgCF,EAAAC,EAAAC,cAAA,WAC5BF,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,CAAMuD,KAAK,gCAAX,qCAQVC,GAAS/C,qBAAW/E,GAAX+E,CAAmB,SAAAgD,GAAiB,IAAd9C,EAAc8C,EAAd9C,QAYjC,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQrB,MAAM,WACVoB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAASkB,UAAWP,EAAQnE,SACxBuD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACIuB,UAAU,KACVC,QAAQ,KACR7C,MAAM,UACN8C,QAAM,GAEN1B,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQ3D,WAAxB,UAIJ+C,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQvD,UACnBA,GAASqF,IAAI,SAAAnF,GAAO,OACjByC,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYrB,MAAM,UAAUiE,IAAKtF,EAAQsC,KAAM6B,QAAM,EAACP,UAAWP,EAAQrD,SACpEA,EAAQ8C,SACLL,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,CAAMrB,MAAM,UAAU4C,UAAU,IAAIgC,KAAMjG,EAAQuC,IAAK6D,OAAO,UACzDpG,EAAQsC,MAGbG,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,CAAMrB,MAAM,UAAU4C,UAAWsB,KAAWC,GAAIxF,EAAQuC,KACnDvC,EAAQsC,UAM7BG,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQlD,OACxBsC,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQhD,QACpBoC,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQtC,YACpB0B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,OAEJD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CACI4B,YAAY,eACZjB,QAAS,CACLkB,KAAMlB,EAAQjC,UACdoD,MAAOnB,EAAQ/B,oBAyBhC+E,GAfAlD,qBAAW/E,GAAX+E,CAAmB,SAAAmD,GAAA,IAAGjD,EAAHiD,EAAGjD,QAASkD,EAAZD,EAAYC,SAAZ,OAC9B9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACI/D,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,MACCgE,iCAAc,sBACTjE,EAAAC,EAAAC,cAACuD,GAAD,MACAzD,EAAAC,EAAAC,cAACO,GAAD,MAENT,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQ/E,MACnBiI,GAEL9D,EAAAC,EAAAC,cAACkD,GAAD,kLC5UKc,GAAa,eAAAvD,EAAA7E,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,GAAAnE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,KACd,qBAFqB,cACnBL,EADmBE,EAAAI,KAAAJ,EAAAK,OAAA,SAIlBP,EAAIQ,MAJc,wBAAAN,EAAAO,SAAAV,EAAAW,SAAH,yBAAAtE,EAAAuE,MAAAD,KAAAE,YAAA,GAObC,GAAe,eAAA/B,EAAAvH,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAgB,EAAOC,GAAP,IAAAf,EAAA,OAAAH,GAAAnE,EAAAuE,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACTC,KAAM,CACpB9E,IAAK,oBAAsBwF,IAFJ,cACrBf,EADqBgB,EAAAV,KAAAU,EAAAT,OAAA,SAIpBP,EAAIQ,MAJgB,wBAAAQ,EAAAP,SAAAK,EAAAJ,SAAH,gBAAAO,GAAA,OAAAnC,EAAA6B,MAAAD,KAAAE,YAAA,oDCKtBM,GAAU,CACZC,UAAW,CACPC,GAAI,CAAEnE,UAAW,SAAAoE,GAAK,OAAI5F,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYC,cAAY,EAACrE,QAAQ,MAASmE,MACpEG,GAAI,CAAEvE,UAAW,SAAAoE,GAAK,OAAI5F,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYC,cAAY,EAACrE,QAAQ,MAASmE,MACpEI,GAAI,CAAExE,UAAW,SAAAoE,GAAK,OAAI5F,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYC,cAAY,EAACrE,QAAQ,aAAgBmE,MAC3EK,GAAI,CAAEzE,UAAW,SAAAoE,GAAK,OAAI5F,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYC,cAAY,EAACrE,QAAQ,UAAUyE,WAAS,GAAKN,MACnFO,EAAG,CAAE3E,UAAW,SAAAoE,GAAK,OAAI5F,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYK,WAAS,GAAKN,MACnDQ,GAAI,CACA5E,UAAWd,qBAjBR,SAAA9E,GAAK,MAAK,CACrByK,SAAU,CACNhK,UAAWT,EAAMM,QAAQC,MAE7BmK,KAAM,KAaa5F,CAAmB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAYgF,EAAf9J,OAAAyK,GAAA,EAAAzK,CAAA6E,EAAA,oBAC1BX,EAAAC,EAAAC,cAAA,MAAIiB,UAAWP,EAAQyF,UACnBrG,EAAAC,EAAAC,cAACqB,EAAAtB,EAADnE,OAAA+J,OAAA,CAAYrE,UAAU,QAAWoE,UAetCY,GARE,SAACZ,GAKd,OAJAa,oBAAU,WACNC,KAAKC,qBAGF3G,EAAAC,EAAAC,cAAC0G,GAAA,EAAD9K,OAAA+J,OAAA,CAAeJ,QAASA,IAAaG,mCH3B1CjK,GAAS,SAAAC,GAAK,MAAK,CACrBiL,gBAAiB,CACbnK,QAA8B,EAArBd,EAAMM,QAAQC,KACvB6B,gBAAiBpC,EAAMiB,QAAQC,KAAK,MAExCgK,eAAgB,CACZzK,UAAgC,EAArBT,EAAMM,QAAQC,QAe3B4K,IAVkBrL,EAUQ,GAT5BsL,KAAQ,EAAGtL,GAAGgH,IAAI,SAACuE,GACf,IAAMC,EAAIC,OAASC,SAASH,EAAG,UAC/B,MAAO,CACHI,IAAOH,EAAEI,OAAO,aAChBxH,IAAO,UAAYoH,EAAEI,OAAO,cAOlCC,GAAU,CACZ,CACI1H,KAAM,SACNC,IAAK,8BAET,CACID,KAAM,QACNC,IAAK,2DAKP0H,GAAU9G,qBAAW/E,GAAX+E,CAAmB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAC/BZ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB5H,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAO6H,UAAW,EAAG3G,UAAWP,EAAQiG,iBACpC7G,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,KAAKqE,cAAY,GAArC,SAGA9F,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,6JAE+DD,EAAAC,EAAAC,cAAA,WAF/D,yJAOJF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,KAAKqE,cAAY,EAAC3E,UAAWP,EAAQkG,gBAAzD,YAGCC,GAASrE,IAAI,SAAAqF,GAAO,OACjB/H,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAY4C,IAAKkF,EAAQV,KACrBrH,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,CAAMrB,MAAM,UAAU4C,UAAWsB,KAAWC,GAAIgF,EAAQjI,KACnDiI,EAAQV,QAKrBrH,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,KAAKqE,cAAY,EAAC3E,UAAWP,EAAQkG,gBAAzD,UAGCS,GAAQ7E,IAAI,SAAAsF,GAAM,OACfhI,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAY4C,IAAKmF,EAAOnI,KAAM6B,QAAM,GAChC1B,EAAAC,EAAAC,cAACqD,GAAAtD,EAAD,CAAMuD,KAAMwE,EAAOlI,IAAKlB,MAAM,UAAU+E,OAAO,SAASsE,IAAI,cACvDD,EAAOnI,YAOba,wBAAW/E,GAAX+E,CAAmB8G,II/D5B7L,GAAS,SAAAC,GAAK,MAAK,CACrBsM,iBAAkB,CACdlK,gBAAiBpC,EAAMiB,QAAQC,KAAK,KACpC8B,MAAOhD,EAAMiB,QAAQqB,OAAOC,MAC5B7B,aAAmC,EAArBV,EAAMM,QAAQC,MAEhCgM,wBAAwBrM,OAAAC,EAAA,EAAAD,CAAA,CACpBY,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OACNP,EAAMW,YAAYC,GAAG,MAAQ,CAC1BuC,aAAc,IAGtBqJ,KAAM,CACFvK,SAAU,YAEdwK,UAAW,CACP/K,QAAS,gBAEbgL,SAAU,CACNhL,QAAS,eACTO,SAAU,WACV0K,OAAQ,MACRC,MAAO,OAEXC,SAAU,CACNpM,UAAgC,EAArBT,EAAMM,QAAQC,MAE7BuM,KAAM,CACFpL,QAAS,QAEbqL,YAAa,CACTC,KAAM,GAEVC,UAAW,CACP7M,MAAO,KAEX8M,SAAU,CACNpM,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,SAEXuD,OAAQ,CACJ1B,gBAAiBpC,EAAMiB,QAAQ8C,WAAWC,MAC1CvD,UAAgC,EAArBT,EAAMM,QAAQC,KACzBO,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,WAIT4M,GAAmBrI,qBAAW/E,GAAX+E,CAAmB,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QAAcC,EACjCC,mBAAS,IADwBC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GAClDmI,EADkDjI,EAAA,GAC5CkI,EAD4ClI,EAAA,GAAAmI,EAE3BpI,oBAAS,GAFkBqI,EAAArN,OAAAkF,EAAA,EAAAlF,CAAAoN,EAAA,GAElDE,EAFkDD,EAAA,GAEzCE,EAFyCF,EAAA,GAInDG,EAAS,eAAAjG,EAAAvH,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAC,IAAA,IAAA0E,EAAAO,EAAA,OAAAnF,GAAAnE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACd0E,GAAW,GADG5E,EAAAE,KAAA,EAEKT,KAFL,OAER8E,EAFQvE,EAAAI,KAGR0E,EAAOpC,KAAO6B,EAAKO,MAAMjC,OAAO,WACtC0B,EAAKO,KAAOA,EACZN,EAAQD,GACRK,GAAW,GANG,wBAAA5E,EAAAO,SAAAV,EAAAW,SAAH,yBAAA5B,EAAA6B,MAAAD,KAAAE,YAAA,GAaf,OAJAsB,oBAAU,WACN6C,KACD,IAGCtJ,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAOkB,UAAWP,EAAQsH,kBACtBlI,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMuJ,WAAS,GACXxJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,GACVwB,EACGpJ,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,MACIzJ,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQuH,yBACpBnI,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,UAAU,KAAKC,QAAQ,KAAK7C,MAAM,UAAUkH,cAAY,GAC/DkD,EAAKjM,OAEViD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,KAAK7C,MAAM,UAAUsH,WAAS,GAAlD,8JAyC1BwD,IA9BehJ,qBAAW/E,GAAX+E,CAAmB,SAAAgD,GAAA,IAAG9C,EAAH8C,EAAG9C,QAASoI,EAAZtF,EAAYsF,KAAZ,OACpChJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB5H,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAMkB,UAAWP,EAAQ8H,MACrB1I,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQ+H,aACpB3I,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,UAAU,KAAKC,QAAQ,MAC9BuH,EAAKjM,OAEViD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,YAAY7C,MAAM,iBACjCoK,EAAKO,MAEVvJ,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,YAAYyE,WAAS,GACpC8C,EAAKa,aAEV7J,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYwB,QAAQ,YAAY7C,MAAM,WAAtC,yBAKRoB,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,CAAQ8J,QAAM,GACV/J,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACIkB,UAAWP,EAAQiI,UACnBoB,MAAM,8sBACNlN,MAAM,qBAON2D,qBAAW/E,GAAX+E,CAAmB,SAAAmD,GAAiB,IAAdjD,EAAciD,EAAdjD,QAAcsJ,EAC5BpJ,mBAAS,IADmBqJ,EAAArO,OAAAkF,EAAA,EAAAlF,CAAAoO,EAAA,GAC7ClB,EAD6CmB,EAAA,GACvClB,EADuCkB,EAAA,GAAAC,EAEtBtJ,oBAAS,GAFauJ,EAAAvO,OAAAkF,EAAA,EAAAlF,CAAAsO,EAAA,GAE7ChB,EAF6CiB,EAAA,GAEpChB,EAFoCgB,EAAA,GAI9Cf,EAAS,eAAAgB,EAAAxO,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAgB,IAAA,IAAA2D,EAAA,OAAA5E,GAAAnE,EAAAuE,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACd0E,GAAW,GADG9D,EAAAZ,KAAA,EAEKT,KAFL,OAER8E,EAFQzD,EAAAV,KAGdoE,EAAQD,GACRK,GAAW,GAJG,wBAAA9D,EAAAP,SAAAK,EAAAJ,SAAH,yBAAAqF,EAAApF,MAAAD,KAAAE,YAAA,GAUf,OAHAsB,oBAAU,WACN6C,KACD,IAECtJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACC,GAAI,GAAIC,GAAI,GAClBwB,EACGpJ,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,MACIzJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,MACAD,EAAAC,EAAAC,cAACqK,GAAD,CAAUpJ,UAAWP,EAAQkI,UACxBE,EAAKwB,cA4BnB9J,4BAAW/E,GAAX+E,CAnBf,SAAckF,GAAO,IACThF,EAAYgF,EAAZhF,QAER,OACIZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC6I,GAAD,MAMA/I,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMuJ,WAAS,EAACtN,QAAS,GAAIiF,UAAWP,EAAQ6H,UAC5CzI,EAAAC,EAAAC,cAACwJ,GAAD,MACA1J,EAAAC,EAAAC,cAACuK,GAAD,sLCnKHC,GAAc,eAAArH,EAAAvH,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAgB,EAAOsF,GAAP,IAAAC,EAAAC,EAAAtG,EAAA,OAAAH,GAAAnE,EAAAuE,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,aACd,0BACNiG,EAAW,IAAIE,UACZC,OAAO,MAAOJ,GACjBE,EAAS,CACXG,QAAS,CACLC,eAAgB,wBANE1F,EAAAZ,KAAA,EASRqE,gBARN,yBAQgB4B,EAAUC,GATZ,cASpBtG,EAToBgB,EAAAV,KAAAU,EAAAT,OAAA,SAUnBP,EAAIQ,MAVe,wBAAAQ,EAAAP,SAAAK,EAAAJ,SAAH,gBAAAO,GAAA,OAAAnC,EAAA6B,MAAAD,KAAAE,YAAA,GAad+F,GAAU,eAAAxH,EAAA5H,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAA8G,IAAA,IAAArL,EAAAyE,EAAA,OAAAH,GAAAnE,EAAAuE,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cAChB7E,EAAM,4BAA6B,IAAIuL,MAAOC,UAD9BF,EAAAzG,KAAA,EAEJC,KAAM,CACpB2G,OAAQ,MACRzL,MACA0L,aAAc,SALI,cAEhBjH,EAFgB6G,EAAAvG,KAAAuG,EAAAtG,OAAA,SAQfP,EAAIQ,MARW,wBAAAqG,EAAApG,SAAAmG,EAAAlG,SAAH,yBAAAvB,EAAAwB,MAAAD,KAAAE,YAAA,GCAjBxJ,GAAS,SAAAC,GAAK,MAAK,CACrBgE,MAAO,CACH5B,gBAAiBpC,EAAMiB,QAAQC,KAAK,KACpC8B,MAAOhD,EAAMiB,QAAQqB,OAAOC,MAC5B7B,aAAmC,EAArBV,EAAMM,QAAQC,MAEhCsP,KAAK3P,OAAAC,EAAA,EAAAD,CAAA,CACDyC,OAAQ,OACRP,gBAAiB,UACjBiB,YAAW,GAAArC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACX4C,aAAY,GAAAnC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACZ2C,WAAU,GAAAlC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACV6C,cAAa,GAAApC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OACZP,EAAMW,YAAY8B,KAAK,KAAO,CAC3BrC,MAAO,OACP8C,WAAU,GAAAlC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACV6C,cAAa,GAAApC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACb8C,YAAW,GAAArC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACX4C,aAAY,GAAAnC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,QAGpBuP,aAAa5P,OAAAC,EAAA,EAAAD,CAAA,GACRF,EAAMW,YAAY8B,KAAK,KAAO,CAC3B3B,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,QAGfwP,iBAAiB7P,OAAAC,EAAA,EAAAD,CAAA,CACbqB,WAAY,QACZC,SAAU,GACVF,UAAW,UACVtB,EAAMW,YAAY8B,KAAK,KAAO,CAC3BlB,WAAY,SACZC,SAAU,KAGlBwO,MAAM9P,OAAAC,EAAA,EAAAD,CAAA,CACFyC,OAAQ,EACRO,WAAY,SACXlD,EAAMW,YAAY8B,KAAK,KAAO,CAC3BS,WAAY,UAGpB+M,QAAS,CACLvO,QAAS,QAEbwO,aAAahQ,OAAAC,EAAA,EAAAD,CAAA,CACT2B,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,SACLP,EAAMW,YAAY8B,KAAK,KAAO,CAC3BjB,SAAU,MACVK,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OAAAS,OAAsD,EAArBhB,EAAMM,QAAQC,KAA/C,QAGd4P,cAAcjQ,OAAAC,EAAA,EAAAD,CAAA,CACV2B,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OAAAS,OAAsD,EAArBhB,EAAMM,QAAQC,KAA/C,OACLP,EAAMW,YAAY8B,KAAK,KAAO,CAC3BjB,SAAU,MACVK,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,aAGd6P,WAAY,CACRhQ,MAAO,OACPyB,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,SAEV8P,MAAO,CACHjQ,MAAO,OACP4C,MAAO,SAEXsN,gBAAgBpQ,OAAAC,EAAA,EAAAD,CAAA,CACZ8C,MAAO,UACPnB,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OACLP,EAAMW,YAAY8B,KAAK,KAAO,CAC3BjB,SAAU,MACVK,OAAM,GAAAb,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,UAGdgQ,QAAQrQ,OAAAC,EAAA,EAAAD,CAAA,CACJyC,OAAQ,OACRK,MAAOhD,EAAMiB,QAAQC,KAAK,KAC1BkB,gBAAiBpC,EAAMiB,QAAQqB,OAAOC,MACtCc,YAAW,GAAArC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACX4C,aAAY,GAAAnC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACZ2C,WAAU,GAAAlC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACV6C,cAAa,GAAApC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OACZP,EAAMW,YAAY8B,KAAK,KAAO,CAC3BS,WAAU,GAAAlC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACV6C,cAAa,GAAApC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACb8C,YAAW,GAAArC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,MACX4C,aAAY,GAAAnC,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,UAsBlBiQ,GAAY,SAACC,GAIf,MAAO,CACHC,KAJWD,EAAIC,KAAK5J,IAAI6J,KAAKC,OAAO9J,IAAI+J,QAAQC,KAAK,MAKrDC,YAJoC,IAAjBN,EAAIM,YAAkBC,QAAQ,GAAK,IAKtDC,KAJSR,EAAIS,QAQfC,GAAY,SAACC,EAASC,EAAaC,GACrCD,EAAcA,GAAe,aAC7BC,EAAYA,GAAa,IAKzB,IAHA,IAAIC,EAAiBC,KAAKJ,GACtBK,EAAa,GAERC,EAAS,EAAGA,EAASH,EAAeI,OAAQD,GAAUJ,EAAW,CAItE,IAHA,IAAIM,EAAQL,EAAeK,MAAMF,EAAQA,EAASJ,GAE9CO,EAAc,IAAIC,MAAMF,EAAMD,QACzBtG,EAAI,EAAGA,EAAIuG,EAAMD,OAAQtG,IAC9BwG,EAAYxG,GAAKuG,EAAMG,WAAW1G,GAGtC,IAAI2G,EAAY,IAAIC,WAAWJ,GAE/BJ,EAAWS,KAAKF,GAIpB,OADW,IAAIG,KAAKV,EAAY,CAAEW,KAAMf,KAItCgB,GAAOvN,qBAAW/E,GAAX+E,CAAmB,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,QAAyBC,GAAAF,EAAhBQ,UACdL,mBAAS,KADqBC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GACjDqN,EADiDnN,EAAA,GAC1CoN,EAD0CpN,EAAA,GAAAmI,EAE1BpI,mBAAS,IAFiBqI,EAAArN,OAAAkF,EAAA,EAAAlF,CAAAoN,EAAA,GAEjDkF,EAFiDjF,EAAA,GAExCkF,EAFwClF,EAAA,GAAAe,EAG1BpJ,oBAAS,GAHiBqJ,EAAArO,OAAAkF,EAAA,EAAAlF,CAAAoO,EAAA,GAGjDd,EAHiDe,EAAA,GAAAC,GAAAD,EAAA,GAI1BrJ,mBAAS,KAJiBuJ,EAAAvO,OAAAkF,EAAA,EAAAlF,CAAAsO,EAAA,GAIjDkE,EAJiDjE,EAAA,GAIxCkE,EAJwClE,EAAA,GA8DxD,OAHA5D,oBAAU,WApBNyE,KACKsD,KAAK,SAAAC,GACF,IAAM9D,EAAO,IAAI+D,KAAK,CAACD,GAAO,eAC9BN,EAAS,CAACxD,IACV,IAAM7K,EAAM6O,IAAIC,gBAAgBjE,GAChC4D,EAAWzO,GACX4K,GAAeC,GACV6D,KAAK,SAAArI,GACF,IAAM0I,EAAa1I,EAAE0I,WACrBR,EAAWQ,GAEX,IAAMJ,EAAO1B,GAAU5G,EAAE2I,KACnBnE,EAAO,IAAI+D,KAAK,CAACD,GAAO,eAC9BN,EAAS,CAACxD,IACV,IAAM7K,EAAM6O,IAAIC,gBAAgBjE,GAChC4D,EAAWzO,QAO5B,CAACsJ,IAEApJ,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAOkB,UAAWP,EAAQhB,OACtBI,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMuJ,WAAS,GACXxJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,EAAGmH,GAAI,IAClB/O,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAMkB,UAAWP,EAAQ6K,MACrBzL,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAakB,UAAWP,EAAQ8K,cAC5B1L,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,UAAU,KAAKC,QAAQ,KAAK7C,MAAM,UAAUkH,cAAY,GAChE9F,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAQ+K,kBAAxB,yBAKR3L,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CACIlD,MAAM,gBACNkN,MAAOqE,EACPnN,UAAWP,EAAQgL,QAGvB5L,EAAAC,EAAAC,cAAC8O,GAAA/O,EAAD,CAAakB,UAAWP,EAAQiL,QAASoD,sBAAoB,GACzDjP,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMuJ,WAAS,GACXxJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,EAAGmH,GAAI,GAClB/O,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACIwB,QAAQ,YACR7C,MAAM,UACNuC,UAAWP,EAAQkL,aACnB5J,QA3DjB,WACf,OAAOgJ,KACFsD,KAAK,SAAAC,GACF,IAAM9D,EAAO,IAAI+D,KAAK,CAACD,GAAO,eAC9BN,EAAS,CAACxD,IACV,IAAM7K,EAAM6O,IAAIC,gBAAgBjE,GAChC4D,EAAWzO,OAiDS,WAOIE,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,QAIRD,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,EAAGmH,GAAI,GAClB/O,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACIC,UAAU,EACVC,OAAO,UACPC,OA5FrB,SAACrB,GACZ,IAAMvD,EAAOuD,EAAM,GACnBsB,QAAQC,IAAI9E,GACZwD,EAAS,CAACxD,IACV,IAAM7K,EAAM6O,IAAIC,gBAAgBjE,GAChC4D,EAAWzO,IAwFqB4P,cAAc,GAEb,SAAArM,GAAA,IAAGsM,EAAHtM,EAAGsM,aAAcC,EAAjBvM,EAAiBuM,cAAe3O,EAAhCoC,EAAgCpC,KAAhC,OACGjB,EAAAC,EAAAC,cAAA,MAASyP,IACL3P,EAAAC,EAAAC,cAAA,QAAW0P,KACX5P,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACIwB,QAAQ,YACR7C,MAAM,UACNuC,UAAWP,EAAQkL,aACnB5J,QAASjB,GAJb,SAORjB,EAAAC,EAAAC,cAAC2P,GAAA5P,EAAD,WAMRD,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,EAAGmH,GAAI,IAClB/O,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACIwB,QAAQ,YACR7C,MAAM,UACNuC,UAAWP,EAAQmL,cACnB7J,QA5GlB,WACdwI,GAAewD,EAAM,IAChBM,KAAK,SAAArI,GACF,IAAM0I,EAAa1I,EAAE0I,WACrBR,EAAWQ,GAEX,IAAMJ,EAAO1B,GAAU5G,EAAE2I,KACnBnE,EAAO,IAAI+D,KAAK,CAACD,GAAO,eAC9BN,EAAS,CAACxD,IACV,IAAM7K,EAAM6O,IAAIC,gBAAgBjE,GAChC4D,EAAWzO,OA8FS,UAOIE,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,QAIRD,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,GAAImH,GAAI,GAAIzL,MAAM,UAC7BtD,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAOkB,UAAWP,EAAQoL,YACtBhM,EAAAC,EAAAC,cAAC4P,GAAA7P,EAAD,CAAOkB,UAAWP,EAAQqL,OAQtBjM,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,KACKmO,EAAQ1L,IAAI0J,IAAW1J,IAAI,SAAC2J,GAAD,OACxBrM,EAAAC,EAAAC,cAAC8P,GAAA/P,EAAD,KACID,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,KAAYoM,EAAIQ,MAChB7M,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,KAAYoM,EAAIM,YAChB3M,EAAAC,EAAAC,cAAC+P,GAAAhQ,EAAD,CAAWqD,MAAM,QAAQ+I,EAAIC,iBA2CrEtM,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACE,GAAI,EAAGmH,GAAI,IAClB/O,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAMkB,UAAWP,EAAQuL,SACrBnM,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,KACID,EAAAC,EAAAC,cAACqK,GAAD,CAAUpJ,UAAWP,EAAQkI,UAlP5C,2oBA6PEpI,wBAAW/E,GAAX+E,CAAmBuN,cCpW5BtS,GAAS,SAAAC,GAAK,MAAK,CACrBsM,iBAAkB,CACdlK,gBAAiBpC,EAAMiB,QAAQC,KAAK,KACpC8B,MAAOhD,EAAMiB,QAAQqB,OAAOC,MAC5B7B,aAAmC,EAArBV,EAAMM,QAAQC,MAEhCgM,wBAAwBrM,OAAAC,EAAA,EAAAD,CAAA,CACpBY,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,OACNP,EAAMW,YAAYC,GAAG,MAAQ,CAC1BuC,aAAc,IAGtBqJ,KAAM,CACFvK,SAAU,YAEdwK,UAAW,CACP/K,QAAS,gBAEbgL,SAAU,CACNhL,QAAS,eACTO,SAAU,WACV0K,OAAQ,MACRC,MAAO,OAEXC,SAAU,CACNpM,UAAgC,EAArBT,EAAMM,QAAQC,MAE7BuM,KAAM,CACFpL,QAAS,QAEbqL,YAAa,CACTC,KAAM,GAEVC,UAAW,CACP7M,MAAO,KAEX8M,SAAU,CACNpM,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,SAEXuD,OAAQ,CACJ1B,gBAAiBpC,EAAMiB,QAAQ8C,WAAWC,MAC1CvD,UAAgC,EAArBT,EAAMM,QAAQC,KACzBO,QAAO,GAAAE,OAA0B,EAArBhB,EAAMM,QAAQC,KAAnB,WAITuN,GAAchJ,qBAAW/E,GAAX+E,CAAmB,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,QAASoI,EAAWrI,EAAXqI,KAC/C,OACIhJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB5H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,MACAD,EAAAC,EAAAC,cAACqK,GAAD,CAAUpJ,UAAWP,EAAQkI,UACxBE,EAAKwB,aA6CX9J,4BAAW/E,GAAX+E,CAtCf,SAAA2C,GAAsC,IAAlBzC,EAAkByC,EAAlBzC,QACV0E,EAD4BjC,EAAT6M,MACLC,OAAO5G,KADO1I,EAERC,mBAAS,IAFDC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GAE3BuP,EAF2BrP,EAAA,GAEpBsP,EAFoBtP,EAAA,GAAAmI,EAGJpI,oBAAS,GAHLqI,EAAArN,OAAAkF,EAAA,EAAAlF,CAAAoN,EAAA,GAG3BE,EAH2BD,EAAA,GAGlBE,EAHkBF,EAAA,GAK5BmH,EAAU,eAAA5M,EAAA5H,OAAAqI,GAAA,EAAArI,CAAAsI,GAAAnE,EAAAoE,KAAG,SAAAC,EAAOgB,GAAP,IAAA8K,EAAA,OAAAhM,GAAAnE,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACf0E,GAAW,GADI5E,EAAAE,KAAA,EAEKS,GAAgBE,GAFrB,OAET8K,EAFS3L,EAAAI,KAGfwL,EAASD,GACT/G,GAAW,GAJI,wBAAA5E,EAAAO,SAAAV,EAAAW,SAAH,gBAAAO,GAAA,OAAA9B,EAAAwB,MAAAD,KAAAE,YAAA,GAYhB,OALAsB,oBAAU,WACN6J,EAAWhL,IACZ,CAACA,IAIAtF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMuJ,WAAS,EAACtN,QAAS,GAAIiF,UAAWP,EAAQ6H,UAC3CW,EACGpJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAMyH,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB5H,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,OAGJzJ,EAAAC,EAAAC,cAACqQ,GAAD,CAAavH,KAAMoH,EAAM7C,OAAS,EAAI6C,EAAM,GAAK,CAAE5F,QAAS,MAEhExK,EAAAC,EAAAC,cAACuK,GAAD,MAEIzD,KAAOoJ,GAAO1N,IAAI,SAACsG,GAAD,OACdhJ,EAAAC,EAAAC,cAACqQ,GAAD,CAAa1N,IAAKmG,EAAKjM,MAAOiM,KAAMA,6DC7F5DtC,KAAK8J,iBAAiB,SAAUC,MAGhC,IAAM7U,GAAQ8U,yBAAe,CACzBC,WAAY,CACRxT,WAAU,6CACVyT,iBAAiB,KAmBnBC,GAAQ,kBAAM7Q,EAAAC,EAAAC,cAAA,oBAEL4Q,GAjBH,WACR,OACI9Q,EAAAC,EAAAC,cAAC6Q,GAAA9Q,EAAD,CAAkBrE,MAAOA,IACrBoE,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACIhR,EAAAC,EAAAC,cAAC+Q,GAAD,KACIjR,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI5P,UAAW6P,KACjCrR,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAOE,KAAK,QAAQ5P,UAAWyM,KAC/BjO,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAOE,KAAK,SAAS5P,UAAWqP,KAChC7Q,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAOE,KAAK,eAAe5P,UAAW8P,SCjBtCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCZNyB,IAASC,OAAO5R,EAAAC,EAAAC,cAAC2R,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1D,KAAK,SAAA2D,GACjCA,EAAaC","file":"static/js/main.6defb008.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouteLink } from 'react-router-dom'\nimport * as R from 'ramda'\nimport moment from 'moment'\n\nconst styles = theme => ({\n    sidebarAboutBox: {\n        padding: theme.spacing.unit * 2,\n        backgroundColor: theme.palette.grey[200],\n    },\n    sidebarSection: {\n        marginTop: theme.spacing.unit * 3,\n    },\n\n})\n\nconst getLastNMonths = (n) => (\n    R.range(0, n).map((i) => {\n        const m = moment().subtract(i, 'months')\n        return {\n            'str': m.format(\"MMMM YYYY\"),\n            'url': '/posts/' + m.format(\"YYYYMM\"),\n        }\n    })\n)\n\nconst archives = getLastNMonths(12)\n\nconst socials = [\n    {\n        name: 'GitHub',\n        url: \"https://github.com/sbl1996\"\n    },\n    {\n        name: 'Zhihu',\n        url: \"https://www.zhihu.com/people/chen-bi-luo-74/activities\"\n    },\n]\n\n\nconst Sidebar = withStyles(styles)(({ classes }) => (\n    <Grid item xs={12} md={4}>\n        <Paper elevation={0} className={classes.sidebarAboutBox}>\n            <Typography variant=\"h6\" gutterBottom>\n                About\n            </Typography>\n            <Typography>\n                I am a college graduate of Lanzhou University in the gap year. I work on machine learning\n                and deep learning with Python (mainly PyTorch, also Keras).<br />\n                I am also interested in functional programming languages like Haskell, Scala and Elixir.\n                Full stack web development is my main way to practice them.\n            </Typography>\n        </Paper>\n        <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n            Archives\n        </Typography>\n        {archives.map(archive => (\n            <Typography key={archive.str}>\n                <Link color=\"inherit\" component={RouteLink} to={archive.url}>\n                    {archive.str}\n                </Link>\n\n            </Typography>\n        ))}\n        <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n            Social\n        </Typography>\n        {socials.map(social => (\n            <Typography key={social.name} noWrap>\n                <Link href={social.url} color=\"inherit\" target=\"_blank\" rel=\"noreferrer\">\n                    {social.name}\n                </Link>\n            </Typography>\n        ))}\n    </Grid>\n))\n\nexport default withStyles(styles)(Sidebar);","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PersonIcon from '@material-ui/icons/Person';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport Divider from '@material-ui/core/Divider'\n\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport InputBase from '@material-ui/core/InputBase';\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nimport Link from '@material-ui/core/Link';\nimport { Link as RouteLink } from 'react-router-dom'\n\n\n\nconst styles = theme => ({\n    body: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        marginTop: theme.spacing.unit * 13,\n        marginBottom: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 3)]: {\n            width: 1100,\n            marginTop: theme.spacing.unit * 13,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    toolbar: {\n        padding: 0,\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        borderBottom: `1px solid ${theme.palette.grey[300]}`,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 3)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    title: {\n        diplay: 'flex',\n    },\n    titleText: {\n        textAlign: 'center',\n        fontFamily: \"BLACK\",\n        fontSize: 24,\n    },\n    sections: {\n        marginLeft: theme.spacing.unit * 6,\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    section: {\n        fontSize: 20,\n        marginLeft: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n    },\n    link: {\n        margin: theme.spacing.unit,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.7),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.9),\n        },\n        [theme.breakpoints.down(600)]: {\n            backgroundColor: 'inherit',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 6,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down(600)]: {\n            width: theme.spacing.unit * 4,\n        },\n    },\n    inputRoot: {\n        width: \"100%\",\n        color: 'inherit',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 6,\n        transition: theme.transitions.create('width'),\n        [theme.breakpoints.down(600)]: {\n            paddingLeft: theme.spacing.unit * 4,\n            width: 0,\n            '&:focus': {\n                width: 135,\n            },\n        },\n    },\n    mobileRoot: {\n        width: \"100%\",\n    },\n    // mobileToolbar: {\n    //     display: 'flex',\n    //     justifyContent: \"space-between\",\n    //     padding: 0,\n    //     marginLeft: theme.spacing.unit * 3,\n    //     marginRight: theme.spacing.unit * 3,\n    //     borderBottom: `1px solid ${theme.palette.grey[300]}`,\n    // },\n    drawerPaper: {\n        width: 240,\n    },\n    menuButton: {\n        display: 'flex',\n    },\n    mobileSections: {\n        fontSize: 20,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        marginTop: theme.spacing.unit * 2,\n        padding: `${theme.spacing.unit * 2}px 0`,\n    },\n});\n\nconst sections = [\n    {\n        name: 'Blog',\n        url: `/`,\n        icon: () => <TranslateIcon />,\n    },\n    {\n        name: 'Demo',\n        url: `/demo`,\n        icon: () => <AppsIcon />,\n    },\n    {\n        name: 'Code',\n        external: true,\n        url: `https://github.com/sbl1996`,\n        icon: () => <CodeIcon />,\n    },\n    {\n        name: 'About',\n        url: `/about`,\n        icon: () => <FingerprintIcon />,\n    },\n    {\n        name: 'Resume',\n        external: true,\n        url: `/api/resume`,\n        icon: () => <PersonIcon />,\n    },\n];\n\nconst MobileHeader = withStyles(styles)(({ classes }) => {\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.mobileRoot}>\n            <AppBar color=\"default\">\n                <Toolbar className={classes.mobileToolbar}>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h5\"\n                        className={classes.title}\n                        noWrap\n                    >\n                        <div className={classes.titleText}>\n                            HrvvI\n                        </div>\n                    </Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                        />\n                    </div>\n                    <div className={classes.menuButton}>\n                        <IconButton\n                            aria-label=\"Open drawer\"\n                            onClick={() => setOpen(true)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                open={open}\n                onClose={() => setOpen(false)}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onClick={() => setOpen(false)}\n                    onKeyDown={() => setOpen(false)}\n                >\n                    <List>\n                        {sections.map(section => (\n                            <ListItem button key={section.name} component={RouteLink} to={section.url}>\n                                <ListItemIcon>{section.icon()}</ListItemIcon>\n                                <ListItemText primary={\n                                    <div className={classes.mobileSections}>\n                                        {section.name}\n                                    </div>\n                                }\n                                />\n                            </ListItem>\n                        ))}\n                        <Divider />\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    )\n})\n\nconst Footer = withStyles(styles)(({ classes }) => {\n    return (\n        <footer className={classes.footer}>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Copyright © 2019-2019 <br />\n                HrvvI. All Rights Reserved. <br />\n                <Link href=\"http://www.miitbeian.gov.cn/\">\n                    浙ICP备19004981号\n                </Link>\n            </Typography>\n        </footer>\n    )\n})\n\nconst Header = withStyles(styles)(({ classes }) => {\n\n    // const onResume = () => {\n    //     getResume()\n    //         .then(blob => {\n    //             const file = new File([blob], \"captcha.jpg\")\n    //             setFiles([file])\n    //             const url = URL.createObjectURL(file)\n\n    //         })\n    // }\n\n    return (\n        <div>\n            <AppBar color=\"default\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h5\"\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        <div className={classes.titleText}>\n                            HrvvI\n                        </div>\n                    </Typography>\n                    <div className={classes.sections}>\n                        {sections.map(section => (\n                            <Typography color=\"inherit\" key={section.name} noWrap className={classes.section}>\n                                {section.external ?\n                                    <Link color=\"inherit\" component='a' href={section.url} target=\"_blank\">\n                                        {section.name}\n                                    </Link>\n                                    :\n                                    <Link color=\"inherit\" component={RouteLink} to={section.url}>\n                                        {section.name}\n                                    </Link>\n                                }\n                            </Typography>\n                        ))}\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n})\n\nconst Layout = withStyles(styles)(({ classes, children }) => (\n    <React.Fragment>\n        <CssBaseline />\n        {useMediaQuery('(min-width:1000px)')\n            ? <Header />\n            : <MobileHeader />\n        }\n        <div className={classes.body}>\n            {children}\n        </div>\n        <Footer />\n    </React.Fragment>\n))\n\n\nexport default Layout","import axios from 'axios'\n\n\nexport const getLatestPost = async () => {\n    const rep = await axios(\n        '/api/posts/latest'\n    )\n    return rep.data\n}\n\nexport const getPostsByMonth = async (month) => {\n    const rep = await axios({\n        url: '/api/posts?month=' + month,\n    })\n    return rep.data\n}","import React, { useEffect } from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport hljs from 'highlight.js/lib/highlight';\n\nconst styles = theme => ({\n    listItem: {\n        marginTop: theme.spacing.unit,\n    },\n    code: {\n\n    }\n});\n\nconst options = {\n    overrides: {\n        h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> },\n        h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> },\n        h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> },\n        h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> },\n        p: { component: props => <Typography paragraph {...props} /> },\n        li: {\n            component: withStyles(styles)(({ classes, ...props }) => (\n                <li className={classes.listItem}>\n                    <Typography component=\"span\" {...props} />\n                </li>\n            )),\n        },\n    },\n};\n\nconst Markdown = (props) => {\n    useEffect(() => {\n        hljs.initHighlighting()\n    });\n\n    return <ReactMarkdown options={options} {...props} />;\n}\n\nexport default Markdown;","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport { getLatestPost } from '../api/posts'\nimport { CircularProgress } from '@material-ui/core';\nimport Markdown from './Markdown'\nimport Sidebar from './Sidebar'\nimport * as R from 'ramda'\nimport moment from 'moment'\n\n\nconst styles = theme => ({\n    mainFeaturedPost: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    mainFeaturedPostContent: {\n        padding: `${theme.spacing.unit * 6}px`,\n        [theme.breakpoints.up('md')]: {\n            paddingRight: 0,\n        },\n    },\n    head: {\n        position: 'relative',\n    },\n    headTitle: {\n        display: 'inline-block',\n    },\n    headDate: {\n        display: 'inline-block',\n        position: 'absolute',\n        bottom: \"3px\",\n        right: \"3px\",\n    },\n    mainGrid: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    card: {\n        display: 'flex',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    cardMedia: {\n        width: 160,\n    },\n    markdown: {\n        padding: `${theme.spacing.unit * 3}px 0`,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        marginTop: theme.spacing.unit * 8,\n        padding: `${theme.spacing.unit * 6}px 0`,\n    },\n});\n\nconst MainFeaturedPost = withStyles(styles)(({ classes }) => {\n    const [post, setPost] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPost = async () => {\n        setLoading(true)\n        const post = await getLatestPost()\n        const date = moment(post.date).format(\"MMMM DD\")\n        post.date = date\n        setPost(post)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPost()\n    }, [])\n\n    return (\n        <Paper className={classes.mainFeaturedPost}>\n            <Grid container>\n                <Grid item md={6}>\n                    {loading ?\n                        <CircularProgress></CircularProgress> : (\n                            <div className={classes.mainFeaturedPostContent}>\n                                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                    {post.title}\n                                </Typography>\n                                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                                    Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents…\n                                </Typography>\n                            </div>\n                        )}\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n})\n\nconst FeaturedPost = withStyles(styles)(({ classes, post }) => (\n    <Grid item xs={12} md={6}>\n        <Card className={classes.card}>\n            <div className={classes.cardDetails}>\n                <CardContent>\n                    <Typography component=\"h2\" variant=\"h5\">\n                        {post.title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {post.date}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" paragraph>\n                        {post.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"primary\">\n                        Continue reading...\n                    </Typography>\n                </CardContent>\n            </div>\n            <Hidden xsDown>\n                <CardMedia\n                    className={classes.cardMedia}\n                    image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n                    title=\"Image title\"\n                />\n            </Hidden>\n        </Card>\n    </Grid>\n))\n\nconst MainContent = withStyles(styles)(({ classes }) => {\n    const [post, setPost] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPost = async () => {\n        setLoading(true)\n        const post = await getLatestPost()\n        setPost(post)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPost()\n    }, [])\n    return (\n        <Grid item xs={12} md={8}>\n            {loading ?\n                <CircularProgress></CircularProgress> : (\n                    <div>\n                        <Divider />\n                        <Markdown className={classes.markdown}>\n                            {post.content}\n                        </Markdown>\n                    </div>\n                )\n            }\n        </Grid>\n    )\n})\n\nfunction Blog(props) {\n    const { classes } = props;\n\n    return (\n        <main>\n            <MainFeaturedPost />\n            {/* <Grid container spacing={40} className={classes.cardGrid}>\n                {featuredPosts.map(post => (\n                    <FeaturedPost key={post.title} post={post} />\n                ))}\n            </Grid> */}\n            <Grid container spacing={40} className={classes.mainGrid}>\n                <MainContent />\n                <Sidebar />\n            </Grid>\n        </main>\n    );\n}\n\nexport default withStyles(styles)(Blog);","import axios, { post, get } from 'axios'\n\nexport const getResume = async () => {\n    const url = 'file/resume'\n    const rep = await axios({\n        method: 'get',\n        url,\n        responseType: 'blob',\n\n    })\n    return rep.data\n}\n\nexport const predictCaptcha = async (file) => {\n    const url = '/api/captcha/detection'\n    const formData = new FormData();\n    formData.append('img', file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    const rep = await post(url, formData, config)\n    return rep.data\n}\n\nexport const genCaptcha = async () => {\n    const url = '/api/captcha/generate?t=' + new Date().getTime()\n    const rep = await axios({\n        method: 'get',\n        url,\n        responseType: 'blob',\n\n    })\n    return rep.data\n}","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Dropzone from 'react-dropzone'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Markdown from './Markdown'\nimport { predictCaptcha, genCaptcha } from '../api/models'\nimport * as R from 'ramda'\n\n\nconst styles = theme => ({\n    paper: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    demo: {\n        height: \"100%\",\n        backgroundColor: 'inherit',\n        paddingLeft: `${theme.spacing.unit * 6}px`,\n        paddingRight: `${theme.spacing.unit * 6}px`,\n        paddingTop: `${theme.spacing.unit * 3}px`,\n        paddingBottom: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            width: \"100%\",\n            paddingTop: `${theme.spacing.unit * 1}px`,\n            paddingBottom: `${theme.spacing.unit * 1}px`,\n            paddingLeft: `${theme.spacing.unit * 3}px`,\n            paddingRight: `${theme.spacing.unit * 3}px`,\n        },\n    },\n    captchaTitle: {\n        [theme.breakpoints.down(600)]: {\n            padding: `${theme.spacing.unit * 1}px`,\n        }\n    },\n    captchaTitleText: {\n        fontFamily: \"BLACK\",\n        fontSize: 28,\n        textAlign: 'center',\n        [theme.breakpoints.down(600)]: {\n            fontFamily: \"Roboto\",\n            fontSize: 18,\n        },\n    },\n    media: {\n        height: 0,\n        paddingTop: '37.5%',\n        [theme.breakpoints.down(600)]: {\n            paddingTop: '37.5%',\n        },\n    },\n    actions: {\n        display: 'flex',\n    },\n    uploadButton: {\n        margin: `${theme.spacing.unit * 1}px 0`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"60%\",\n            margin: `${theme.spacing.unit * 1}px ${theme.spacing.unit * 1}px`,\n        },\n    },\n    predictButton: {\n        margin: `${theme.spacing.unit * 1}px ${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"60%\",\n            margin: `${theme.spacing.unit * 1}px auto`,\n        },\n    },\n    tablePaper: {\n        width: '100%',\n        margin: `${theme.spacing.unit * 1}px 0`,\n    },\n    table: {\n        width: '100%',\n        color: 'white'\n    },\n    loadingProgress: {\n        color: '#e0e0e0',\n        margin: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"40%\",\n            margin: `${theme.spacing.unit * 1}px 0`,\n        },\n    },\n    summary: {\n        height: \"100%\",\n        color: theme.palette.grey[800],\n        backgroundColor: theme.palette.common.white,\n        paddingLeft: `${theme.spacing.unit * 6}px`,\n        paddingRight: `${theme.spacing.unit * 6}px`,\n        paddingTop: `${theme.spacing.unit * 3}px`,\n        paddingBottom: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            paddingTop: `${theme.spacing.unit * 1}px`,\n            paddingBottom: `${theme.spacing.unit * 1}px`,\n            paddingLeft: `${theme.spacing.unit * 2}px`,\n            paddingRight: `${theme.spacing.unit * 2}px`,\n        },\n    },\n})\n\nconst summary = `\n## Model\n- [DSOD](https://arxiv.org/abs/1708.01241) ([DenseNet](https://arxiv.org/abs/1608.06993)+[SSD](https://arxiv.org/abs/1512.02325))\n- 128x48 input image and 50 target letters\n- 2 feature maps: (8,3) and (4,2)\n- aspect ratios: 1, 1/2, 2\n- 97.8% mAP with 2,345,774 parameters\n\n## Dataset\n- captcha images generated by [hutil.ext.captcha](https://github.com/sbl1996/pytorch-hrvvi-ext/blob/master/hutil/ext/captcha.py)\n- fonts: Microsoft YaHei, SimHei, Times New Roman, Computer Modern\n- font sizes: 28, 32, 36, 40, 44, 48\n- 30% random dots, 30% random curves and 20° rotate\n\n## Todo\n- generalize to more clear fonts\n`\nconst formatBox = (box) => {\n    const boxStr = box.bbox.map(Math.round).map(String).join(\", \")\n    const confidenceStr = (box.confidence * 100).toFixed(2) + '%'\n    const char = box.label\n    return {\n        bbox: boxStr,\n        confidence: confidenceStr,\n        char,\n    }\n}\n\nconst b64toBlob = (b64Data, contentType, sliceSize) => {\n    contentType = contentType || 'image/jpeg';\n    sliceSize = sliceSize || 512;\n\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n\n        byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n}\n\nconst Demo = withStyles(styles)(({ classes, className }) => {\n    const [files, setFiles] = useState([])\n    const [predict, setPredict] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [preview, setPreview] = useState('')\n\n    const onDrop = (files) => {\n        const file = files[0]\n        console.log(file)\n        setFiles([file])\n        const url = URL.createObjectURL(file)\n        setPreview(url)\n    }\n\n    const onPredict = () => {\n        predictCaptcha(files[0])\n            .then(p => {\n                const detections = p.detections\n                setPredict(detections)\n\n                const blob = b64toBlob(p.img)\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n            })\n    }\n\n    const onGenerate = () => {\n        return genCaptcha()\n            .then(blob => {\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n            })\n    }\n\n    const onLoading = () => {\n        genCaptcha()\n            .then(blob => {\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n                predictCaptcha(file)\n                    .then(p => {\n                        const detections = p.detections\n                        setPredict(detections)\n\n                        const blob = b64toBlob(p.img)\n                        const file = new File([blob], \"captcha.jpg\")\n                        setFiles([file])\n                        const url = URL.createObjectURL(file)\n                        setPreview(url)\n                    })\n            })\n    }\n\n    useEffect(() => {\n        onLoading()\n    }, [loading])\n    return (\n        <Paper className={classes.paper}>\n            <Grid container>\n                <Grid item md={6} sm={12}>\n                    <Card className={classes.demo}>\n                        <CardContent className={classes.captchaTitle}>\n                            <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" gutterBottom>\n                                <div className={classes.captchaTitleText}>\n                                    Captcha Recognation\n                                </div>\n                            </Typography>\n                        </CardContent>\n                        <CardMedia\n                            title=\"CAPTCHA image\"\n                            image={preview}\n                            className={classes.media}\n                        >\n                        </CardMedia>\n                        <CardActions className={classes.actions} disableActionSpacing>\n                            <Grid container>\n                                <Grid item md={4} sm={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        className={classes.uploadButton}\n                                        onClick={onGenerate}\n                                    >\n                                        Generate\n                                        <RefreshIcon />\n                                    </Button>\n\n                                </Grid>\n                                <Grid item md={4} sm={6}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept=\"image/*\"\n                                        onDrop={onDrop}\n                                        disableClick={true}\n                                    >\n                                        {({ getRootProps, getInputProps, open }) => (\n                                            <div {...getRootProps()}>\n                                                <input {...getInputProps()} />\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"default\"\n                                                    className={classes.uploadButton}\n                                                    onClick={open}\n                                                >\n                                                    Upload\n                                        <CloudUploadIcon />\n                                                </Button>\n                                            </div>\n                                        )}\n                                    </Dropzone>\n                                </Grid>\n                                <Grid item md={4} sm={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        className={classes.predictButton}\n                                        onClick={onPredict}\n                                    >\n                                        Predict\n                                        <SearchIcon />\n                                    </Button>\n\n                                </Grid>\n                                <Grid item md={12} sm={12} align='center'>\n                                    <Paper className={classes.tablePaper}>\n                                        <Table className={classes.table}>\n                                            {/* <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Char</TableCell>\n                                                    <TableCell>Confidence</TableCell>\n                                                    <TableCell align='left'>Box</TableCell>\n                                                </TableRow>\n                                            </TableHead> */}\n                                            <TableBody>\n                                                {predict.map(formatBox).map((box) => (\n                                                    <TableRow>\n                                                        <TableCell>{box.char}</TableCell>\n                                                        <TableCell>{box.confidence}</TableCell>\n                                                        <TableCell align='left'>{box.bbox}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </Paper>\n                                    {/* <Typography\n                                        className={classes.predict}\n                                        component=\"h1\"\n                                        variant=\"h4\"\n                                        color=\"inherit\"\n                                    >\n                                        <div className={classes.predictText}>\n                                            {\n                                                predict.map((box) => (\n                                                    <Typography\n                                                        key={box.bbox[0]}\n                                                        color=\"inherit\"\n                                                    >\n                                                        {formatBox(box)}\n                                                    </Typography>\n                                                ))\n                                            }\n                                        </div>\n                                    </Typography> */}\n                                </Grid>\n                                {/* <Grid item md={2} sm={2}>\n                                    {loading ? (\n                                        <CircularProgress\n                                            className={classes.loadingProgress}\n                                        />) : (\n                                            <CircularProgress\n                                                variant=\"static\"\n                                                className={classes.loadingProgress}\n                                                value={100}\n                                            />\n                                        )}\n                                </Grid> */}\n                            </Grid>\n                        </CardActions>\n                    </Card>\n                </Grid>\n\n                <Grid item md={6} sm={12}>\n                    <Card className={classes.summary}>\n                        <CardContent>\n                            <Markdown className={classes.markdown}>\n                                {summary}\n                            </Markdown>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Paper >\n    )\n})\n\nexport default withStyles(styles)(Demo)","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport { getPostsByMonth } from '../api/posts'\nimport { CircularProgress } from '@material-ui/core';\nimport Markdown from './Markdown'\nimport Sidebar from './Sidebar'\nimport * as R from 'ramda'\nimport moment from 'moment'\n\n\nconst styles = theme => ({\n    mainFeaturedPost: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    mainFeaturedPostContent: {\n        padding: `${theme.spacing.unit * 6}px`,\n        [theme.breakpoints.up('md')]: {\n            paddingRight: 0,\n        },\n    },\n    head: {\n        position: 'relative',\n    },\n    headTitle: {\n        display: 'inline-block',\n    },\n    headDate: {\n        display: 'inline-block',\n        position: 'absolute',\n        bottom: \"3px\",\n        right: \"3px\",\n    },\n    mainGrid: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    card: {\n        display: 'flex',\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    cardMedia: {\n        width: 160,\n    },\n    markdown: {\n        padding: `${theme.spacing.unit * 3}px 0`,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        marginTop: theme.spacing.unit * 8,\n        padding: `${theme.spacing.unit * 6}px 0`,\n    },\n});\n\nconst MainContent = withStyles(styles)(({ classes, post }) => {\n    return (\n        <Grid item xs={12} md={8}>\n            <div>\n                <Divider />\n                <Markdown className={classes.markdown}>\n                    {post.content}\n                </Markdown>\n            </div>\n        </Grid>\n    )\n})\n\nfunction PostList({ classes, match }) {\n    const month = match.params.date\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPosts = async (month) => {\n        setLoading(true)\n        const posts = await getPostsByMonth(month)\n        setPosts(posts)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPosts(month)\n    }, [month])\n\n\n    return (\n        <main>\n            <Grid container spacing={40} className={classes.mainGrid}>\n                {loading ?\n                    <Grid item xs={12} md={8}>\n                        <CircularProgress></CircularProgress>\n                    </Grid>\n                    :\n                    <MainContent post={posts.length > 0 ? posts[0] : { content: '' }} />\n                }\n                <Sidebar />\n                {\n                    R.tail(posts).map((post) => (\n                        <MainContent key={post.title} post={post} />\n                    ))\n                }\n            </Grid>\n        </main>\n    );\n}\n\nexport default withStyles(styles)(PostList);","import React from 'react'\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\"\nimport Layout from './components/Layout'\nimport Blog from './components/Blog'\nimport Demo from './components/Demo'\nimport PostList from './components/PostList'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport hljs from 'highlight.js/lib/highlight'\nimport 'highlight.js/styles/github.css'\nimport python from 'highlight.js/lib/languages/python'\nhljs.registerLanguage('python', python)\n\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        useNextVariants: true,\n    }\n});\n\nconst App = () => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Router>\n                <Layout>\n                    <Route exact path=\"/\" component={Blog} />\n                    <Route path=\"/demo\" component={Demo} />\n                    <Route path=\"/about\" component={About} />\n                    <Route path=\"/posts/:date\" component={PostList} />\n                </Layout>\n            </Router>\n        </MuiThemeProvider>\n    )\n}\n\nconst About = () => <h2>About</h2>;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}