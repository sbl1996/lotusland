{"version":3,"sources":["components/Sidebar.js","components/Layout.js","api/posts.js","components/Markdown.js","components/Blog.js","api/models.js","components/Demo.js","components/PostList.js","components/PostMonthView.js","components/PostSearchView.js","App.js","serviceWorker.js","index.js"],"names":["n","styles","theme","body","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","marginTop","marginBottom","breakpoints","up","toolbar","padding","borderBottom","concat","palette","grey","title","diplay","titleText","textAlign","fontFamily","fontSize","sections","display","section","link","margin","grow","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","common","white","&:hover","down","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","mobileRoot","drawerPaper","menuButton","mobileSections","footer","background","paper","name","url","icon","react_default","a","createElement","Translate_default","Apps_default","external","Code_default","Person_default","MobileHeader","withStyles","_ref","classes","_useState","useState","_useState2","slicedToArray","open","setOpen","className","AppBar_default","Toolbar_default","mobileToolbar","Typography_default","component","variant","noWrap","Search_default","InputBase_default","placeholder","root","input","IconButton_default","aria-label","onClick","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","List_default","map","ListItem_default","button","key","RouteLink","to","ListItemIcon_default","ListItemText_default","primary","Divider_default","Footer","_ref2","align","Link_default","href","SearchInput","_ref3","history","onKeyUp","event","keyword","target","value","keyCode","push","Header","_ref4","underline","Layout","_ref5","children","Fragment","CssBaseline_default","useMediaQuery","withRouter","getLatestPost","asyncToGenerator","regenerator_default","mark","_callee","rep","wrap","_context","prev","next","axios","sent","abrupt","data","stop","this","apply","arguments","searchPosts","_callee2","_context2","_x","getPostsByMonth","_callee3","month","_context3","_x2","options","overrides","h1","props","assign","gutterBottom","h2","h3","h4","paragraph","p","li","listItem","code","objectWithoutProperties","Markdown","useEffect","hljs","initHighlighting","esm","sidebarAboutBox","sidebarSection","archives","R","i","m","moment","subtract","str","format","socials","Sidebar","Grid_default","item","xs","md","Paper_default","elevation","archive","social","rel","mainFeaturedPost","mainFeaturedPostContent","mainGrid","markdown","MainFeaturedPost","post","setPost","_useState3","_useState4","loading","setLoading","fetchPost","date","container","index_es","MainContent","_useState5","_useState6","_useState7","_useState8","components_Markdown","content","components_Sidebar","predictCaptcha","file","formData","config","FormData","append","headers","content-type","genCaptcha","Date","getTime","method","responseType","demo","captchaTitle","captchaTitleText","media","actions","upload","uploadButton","predictButton","tablePaper","table","loadingProgress","summary","formatBox","box","bbox","Math","round","String","join","confidence","toFixed","char","label","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","type","Demo","files","setFiles","predict","setPredict","preview","setPreview","then","blob","File","URL","createObjectURL","detections","img","sm","Card_default","CardContent_default","CardMedia_default","image","CardActions_default","disableActionSpacing","Button_default","Refresh_default","es","multiple","accept","onDrop","console","log","disableClick","getRootProps","getInputProps","CloudUpload_default","Table_default","TableBody_default","TableRow_default","TableCell_default","PostList","posts","PostList_MainContent","match","params","setPosts","fetchPosts","window","scrollTo","components_PostList","registerLanguage","python","createMuiTheme","typography","useNextVariants","About","App","MuiThemeProvider_default","BrowserRouter","components_Layout","Route","exact","path","Blog","PostSearchView","PostMonthView","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbb6b9a4.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment'\nimport * as R from 'ramda'\nimport React from 'react';\nimport {Link as RouteLink} from 'react-router-dom'\n\nconst styles = theme => ({\n    sidebarAboutBox : {\n        padding : theme.spacing.unit * 2,\n        backgroundColor : theme.palette.grey[200],\n    },\n    sidebarSection : {\n        marginTop : theme.spacing.unit * 3,\n    },\n\n})\n\nconst getLastNMonths = (n) => (\n    R.range(0, n).map((i) => {\n        const m = moment().subtract(i, 'months')\n        return {\n    'str': m.format(\"MMMM YYYY\"), 'url': '/posts/' + m.format(\"YYYYMM\"),\n        }\n    })\n)\n\n        const archives = getLastNMonths(12)\n\nconst socials = [\n    {\n        name: 'GitHub',\n        url: \"https://github.com/sbl1996\"\n    },\n    {\n        name: 'Zhihu',\n        url: \"https://www.zhihu.com/people/chen-bi-luo-74/activities\"\n    },\n]\n\n\nconst Sidebar = withStyles(styles)(({ classes }) => (\n    <Grid item xs={12} md={4}>\n        <Paper elevation={0} className={classes.sidebarAboutBox}>\n            <Typography variant=\"h6\" gutterBottom>\n                About\n            </Typography>\n            <Typography>\n                I will be a first-year graduate student of CASIA in September. I work on machine learning\n                and deep learning (mainly PyTorch, also Keras).<br />\n                I am also interested in functional programming languages like Haskell, Scala and Elixir.\n                Full stack web development is my main way to practice them.\n            </Typography>\n        </Paper>\n        <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n            Archives\n        </Typography>\n        {archives.map(archive => (\n            <Typography key={archive.str}>\n                <Link color=\"inherit\" component={RouteLink} to={archive.url}>\n                    {archive.str}\n                </Link>\n\n            </Typography>\n        ))}\n        <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n            Social\n        </Typography>\n        {socials.map(social => (\n            <Typography key={social.name} noWrap>\n                <Link href={social.url} color=\"inherit\" target=\"_blank\" rel=\"noreferrer\">\n                    {social.name}\n                </Link>\n            </Typography>\n        ))}\n    </Grid>\n))\n\nexport default withStyles(styles)(Sidebar);","import AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {withStyles} from '@material-ui/core/styles';\nimport {fade} from '@material-ui/core/styles/colorManipulator';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    unstable_useMediaQuery as useMediaQuery\n} from '@material-ui/core/useMediaQuery';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport React, {useState} from 'react';\nimport {Link as RouteLink, withRouter} from 'react-router-dom'\n\nconst styles = theme => ({\n    body : {\n        width : 'auto',\n        marginLeft : theme.spacing.unit * 3,\n        marginRight : theme.spacing.unit * 3,\n        marginTop : theme.spacing.unit * 13,\n        marginBottom : theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 3)] : {\n            width : 1100,\n            marginTop : theme.spacing.unit * 13,\n            marginLeft : 'auto',\n            marginRight : 'auto',\n        },\n    },\n    toolbar : {\n        padding : 0,\n        marginLeft : theme.spacing.unit * 3,\n        marginRight : theme.spacing.unit * 3,\n        borderBottom : `1px solid ${theme.palette.grey[300]}`,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 3)] : {\n            width : 1100,\n            marginLeft : 'auto',\n            marginRight : 'auto',\n        },\n    },\n    title : {\n        diplay : 'flex',\n    },\n    titleText : {\n        textAlign : 'center',\n        fontFamily : \"BLACK\",\n        fontSize : 24,\n    },\n    sections : {\n        marginLeft : theme.spacing.unit * 6,\n        [theme.breakpoints.up('md')] : {\n            display : 'flex',\n        },\n    },\n    section : {\n        fontSize : 20,\n        marginLeft : theme.spacing.unit * 2,\n        marginRight : theme.spacing.unit * 2,\n    },\n    link : {\n        margin : theme.spacing.unit,\n    },\n    grow : {\n        flexGrow : 1,\n    },\n    search : {\n        position : 'relative',\n        borderRadius : theme.shape.borderRadius,\n        backgroundColor : fade(theme.palette.common.white, 0.7),\n        '&:hover' : {\n            backgroundColor : fade(theme.palette.common.white, 0.9),\n        },\n        [theme.breakpoints.down(600)] : {\n            backgroundColor : 'inherit',\n        },\n    },\n    searchIcon : {\n        width : theme.spacing.unit * 6,\n        height : '100%',\n        position : 'absolute',\n        pointerEvents : 'none',\n        display : 'flex',\n        alignItems : 'center',\n        justifyContent : 'center',\n        [theme.breakpoints.down(600)] : {\n            width : theme.spacing.unit * 4,\n        },\n    },\n    inputRoot : {\n        width : \"100%\",\n        color : 'inherit',\n    },\n    inputInput : {\n        paddingTop : theme.spacing.unit,\n        paddingRight : theme.spacing.unit,\n        paddingBottom : theme.spacing.unit,\n        paddingLeft : theme.spacing.unit * 6,\n        transition : theme.transitions.create('width'),\n        [theme.breakpoints.down(600)] : {\n            paddingLeft : theme.spacing.unit * 4,\n            width : 0,\n            '&:focus' : {\n                width : 135,\n            },\n        },\n    },\n    mobileRoot : {\n        width : \"100%\",\n    },\n    // mobileToolbar: {\n    //     display: 'flex',\n    //     justifyContent: \"space-between\",\n    //     padding: 0,\n    //     marginLeft: theme.spacing.unit * 3,\n    //     marginRight: theme.spacing.unit * 3,\n    //     borderBottom: `1px solid ${theme.palette.grey[300]}`,\n    // },\n    drawerPaper : {\n        width : 240,\n    },\n    menuButton : {\n        display : 'flex',\n    },\n    mobileSections : {\n        fontSize : 20,\n    },\n    footer : {\n        backgroundColor : theme.palette.background.paper,\n        marginTop : theme.spacing.unit * 2,\n        padding : `${theme.spacing.unit * 2}px 0`,\n    },\n});\n\nconst sections = [\n    {\n        name : 'Blog',\n        url : `/`,\n        icon : () => <TranslateIcon />,\n    },\n    {\n        name : 'Demo',\n        url : `/demo`,\n        icon : () => <AppsIcon />,\n    },\n    {\n        name : 'Code',\n        external : true,\n        url : `https://github.com/sbl1996`,\n        icon : () => <CodeIcon />,\n    },\n    // {\n    //     name : 'About',\n    //     url : `/about`,\n    //     icon : () => <FingerprintIcon />,\n    // },\n    {\n        name : 'CV',\n        external : true,\n        url : `/api/cv`,\n        icon : () => <PersonIcon />,\n    },\n];\n\nconst MobileHeader = withStyles(styles)(({ classes }) => {\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.mobileRoot}>\n            <AppBar color=\"default\">\n                <Toolbar className={classes.mobileToolbar}>\n                    <Typography\n    component = \"h2\"\n    variant = \"h5\"\n    className =\n        {classes.title} noWrap >\n        <div className = {classes.titleText}>\n            HrvvI</div>\n                    </Typography>\n        <div className =\n         {\n             classes.grow\n         } />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                        />\n        </div>\n                    <div className={classes.menuButton}>\n                        <IconButton\n                            aria-label=\"Open drawer\"\n                            onClick={() => setOpen(true)}\n                        >\n                            <MenuIcon />\n        </IconButton>\n\n                    </div>\n        </Toolbar>\n            </AppBar>< Drawer\n    open = {open} onClose = {() => setOpen(false)} classes = {\n        { paper: classes.drawerPaper, }\n    } > < div\n    tabIndex = {0} role = \"button\"\n                    onClick={() => setOpen(false)}\n                    onKeyDown={() => setOpen(false)}\n                >\n                    <List>\n                        {sections.map(section => (\n                            <ListItem button key={section.name} component={RouteLink} to={section.url}>\n                                <ListItemIcon>{section.icon()}</ListItemIcon>\n                                <ListItemText primary={\n                                    <div className={classes.mobileSections}>\n                                        {section.name}\n                                    </div>\n                                }\n                                />\n                            </ListItem>\n                        ))}\n                        <Divider />\n                    </List>\n                </div>\n            </Drawer>\n        </div>\n    )\n                    })\n\nconst Footer = withStyles(styles)(({ classes }) => {\n    return (\n        <footer className={classes.footer}>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Copyright © 2019-2019 <br />\n                HrvvI. All Rights Reserved. <br />\n                <Link href=\"http://www.miitbeian.gov.cn/\">\n                    浙ICP备19004981号\n                </Link>\n            </Typography>\n        </footer>\n    )\n})\n\nconst SearchInput = withStyles(styles)(({ classes, history }) => {\n    // const [keyword, setKeyword] = useState('')\n    const onSearch = (event) => {\n    const keyword = event.target.value\n    if (event.keyCode === 13 && keyword !== '') {\n        const url = \"/posts/search/\" + keyword\n        history.push(url)\n    }\n    }\n    return (\n        <InputBase\n    placeholder = \"Search…\"\n            classes={\n    { root: classes.inputRoot, input: classes.inputInput, }}\n            // onChange={(event) => setKeyword(event.target.value)}\n            onKeyUp={\n    onSearch}\n        />\n    )\n})\n\nconst Header = withStyles(styles)(({ classes, history }) => {\n    return (\n        <div>\n            <AppBar color=\"default\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h5\"\n                        color=\"inherit\"\n                        noWrap\n                    >\n                        <Typography color=\"inherit\" noWrap className={classes.titleText}>\n                            <Link color=\"inherit\" component={RouteLink} to='/' underline='none'>\n                                HrvvI\n                            </Link>\n                        </Typography>\n                    </Typography>\n                    <div className={classes.sections}>\n                        {sections.map(section => (\n                            <Typography color=\"inherit\" key={section.name} noWrap className={classes.section}>\n                                {section.external ?\n                                    <Link color=\"inherit\" component='a' href={section.url} target=\"_blank\" underline='none'>\n                                        {section.name}\n                                    </Link>\n                                    :\n                                    <Link color=\"inherit\" component={RouteLink} to={section.url} underline='none'>\n                                        {section.name}\n                                    </Link>\n                                }\n                            </Typography>\n                        ))}\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <SearchInput history={history} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n            })\n\nconst Layout = withStyles(styles)(({ classes, children, history }) => {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            {useMediaQuery('(min-width:1000px)')\n                ? <Header history={\n        history} />\n                : <MobileHeader />\n            }\n            <div className={classes.body}>\n                {children}\n            </div>\n            <Footer />\n        </React.Fragment>\n    )\n})\n\n\nexport default withRouter(Layout)","import axios from 'axios'\n\n\nexport const getLatestPost = async () => {\n    const rep = await axios(\n        '/api/posts/latest'\n    )\n    return rep.data\n}\n\nexport const searchPosts = async (keyword) => {\n    const rep = await axios({\n        url: '/api/posts/search?keyword=' + keyword,\n    })\n    return rep.data\n}\n\nexport const getPostsByMonth = async (month) => {\n    const rep = await axios({\n        url: '/api/posts?month=' + month,\n    })\n    return rep.data\n}","import React, { useEffect } from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport hljs from 'highlight.js/lib/highlight';\n\nconst styles = theme => ({\n    listItem: {\n        marginTop: theme.spacing.unit,\n    },\n    code: {\n\n    }\n});\n\nconst options = {\n    overrides: {\n        h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> },\n        h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> },\n        h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> },\n        h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> },\n        p: { component: props => <Typography paragraph {...props} /> },\n        li: {\n            component: withStyles(styles)(({ classes, ...props }) => (\n                <li className={classes.listItem}>\n                    <Typography component=\"span\" {...props} />\n                </li>\n            )),\n        },\n    },\n};\n\nconst Markdown = (props) => {\n    useEffect(() => {\n        hljs.initHighlighting()\n    });\n\n    return <ReactMarkdown options={options} {...props} />;\n}\n\nexport default Markdown;","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { getLatestPost } from '../api/posts'\nimport { CircularProgress } from '@material-ui/core';\nimport Markdown from './Markdown'\nimport Sidebar from './Sidebar'\nimport moment from 'moment'\n\n\nconst styles = theme => ({\n    mainFeaturedPost: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    mainFeaturedPostContent: {\n        padding: `${theme.spacing.unit * 6}px`,\n        [theme.breakpoints.up('md')]: {\n            paddingRight: 0,\n        },\n    },\n    mainGrid: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    markdown: {\n        padding: `${theme.spacing.unit * 3}px 0`,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        marginTop: theme.spacing.unit * 8,\n        padding: `${theme.spacing.unit * 6}px 0`,\n    },\n});\n\nconst MainFeaturedPost = withStyles(styles)(({ classes }) => {\n    const [post, setPost] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPost = async () => {\n        setLoading(true)\n        const post = await getLatestPost()\n        const date = moment(post.date).format(\"MMMM DD\")\n        post.date = date\n        setPost(post)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPost()\n    }, [])\n\n    return (\n        <Paper className={classes.mainFeaturedPost}>\n            <Grid container>\n                <Grid item md={6}>\n                    {loading ?\n                        <CircularProgress></CircularProgress> : (\n                            <div className={classes.mainFeaturedPostContent}>\n                                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                    {post.title}\n                                </Typography>\n                                <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                                    Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents…\n                                </Typography>\n                            </div>\n                        )}\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n})\n\nconst MainContent = withStyles(styles)(({ classes }) => {\n    const [post, setPost] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPost = async () => {\n        setLoading(true)\n        const post = await getLatestPost()\n        setPost(post)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPost()\n    }, [])\n    return (\n        <Grid item xs={12} md={8}>\n            {loading ?\n                <CircularProgress></CircularProgress> : (\n                    <div>\n                        <Divider />\n                        <Markdown className={classes.markdown}>\n                            {post.content}\n                        </Markdown>\n                    </div>\n                )\n            }\n        </Grid>\n    )\n})\n\nfunction Blog(props) {\n    const { classes } = props;\n\n    return (\n        <main>\n            <MainFeaturedPost />\n            <Grid container spacing={40} className={classes.mainGrid}>\n                <MainContent />\n                <Sidebar />\n            </Grid>\n        </main>\n    );\n}\n\nexport default withStyles(styles)(Blog);","import axios, { post } from 'axios'\n\nexport const getResume = async () => {\n    const url = 'file/resume'\n    const rep = await axios({\n        method: 'get',\n        url,\n        responseType: 'blob',\n\n    })\n    return rep.data\n}\n\nexport const predictCaptcha = async (file) => {\n    const url = '/api/captcha/detection'\n    const formData = new FormData();\n    formData.append('img', file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    const rep = await post(url, formData, config)\n    return rep.data\n}\n\nexport const genCaptcha = async () => {\n    const url = '/api/captcha/generate?t=' + new Date().getTime()\n    const rep = await axios({\n        method: 'get',\n        url,\n        responseType: 'blob',\n\n    })\n    return rep.data\n}","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Dropzone from 'react-dropzone'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport yellow from '@material-ui/core/colors/yellow';\n\n\nimport Markdown from './Markdown'\nimport { predictCaptcha, genCaptcha } from '../api/models'\n\n\nconst styles = theme => ({\n    paper: {\n        backgroundColor: theme.palette.grey[800],\n        color: theme.palette.common.white,\n        marginBottom: theme.spacing.unit * 4,\n    },\n    demo: {\n        height: \"100%\",\n        backgroundColor: 'inherit',\n        paddingLeft: `${theme.spacing.unit * 6}px`,\n        paddingRight: `${theme.spacing.unit * 6}px`,\n        paddingTop: `${theme.spacing.unit * 3}px`,\n        paddingBottom: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            width: \"100%\",\n            paddingTop: `${theme.spacing.unit * 1}px`,\n            paddingBottom: `${theme.spacing.unit * 1}px`,\n            paddingLeft: `${theme.spacing.unit * 3}px`,\n            paddingRight: `${theme.spacing.unit * 3}px`,\n        },\n    },\n    captchaTitle: {\n        [theme.breakpoints.down(600)]: {\n            padding: `${theme.spacing.unit * 1}px`,\n        }\n    },\n    captchaTitleText: {\n        fontFamily: \"BLACK\",\n        fontSize: 28,\n        textAlign: 'center',\n        [theme.breakpoints.down(600)]: {\n            fontFamily: \"Roboto\",\n            fontSize: 18,\n        },\n    },\n    media: {\n        height: 0,\n        paddingTop: '37.5%',\n        [theme.breakpoints.down(600)]: {\n            paddingTop: '37.5%',\n        },\n    },\n    actions: {\n        display: 'flex',\n    },\n    upload: {\n        [theme.breakpoints.down(600)]: {\n            display: 'none',\n        },\n\n    },\n    uploadButton: {\n        margin: `${theme.spacing.unit * 1}px 0`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"60%\",\n            margin: `${theme.spacing.unit * 1}px ${theme.spacing.unit * 1}px`,\n        },\n    },\n    predictButton: {\n        margin: `${theme.spacing.unit * 1}px ${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"60%\",\n            margin: `${theme.spacing.unit * 1}px auto`,\n        },\n    },\n    tablePaper: {\n        width: '100%',\n        margin: `${theme.spacing.unit * 1}px 0`,\n    },\n    table: {\n        width: '100%',\n        color: 'white'\n    },\n    loadingProgress: {\n        color: '#e0e0e0',\n        margin: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            fontSize: \"40%\",\n            margin: `${theme.spacing.unit * 1}px 0`,\n        },\n    },\n    summary: {\n        height: \"100%\",\n        color: theme.palette.grey[800],\n        backgroundColor: theme.palette.common.white,\n        paddingLeft: `${theme.spacing.unit * 6}px`,\n        paddingRight: `${theme.spacing.unit * 6}px`,\n        paddingTop: `${theme.spacing.unit * 3}px`,\n        paddingBottom: `${theme.spacing.unit * 3}px`,\n        [theme.breakpoints.down(600)]: {\n            paddingTop: `${theme.spacing.unit * 1}px`,\n            paddingBottom: `${theme.spacing.unit * 1}px`,\n            paddingLeft: `${theme.spacing.unit * 2}px`,\n            paddingRight: `${theme.spacing.unit * 2}px`,\n        },\n    },\n})\n\nconst summary = `\n## Model\n- [DSOD](https://arxiv.org/abs/1708.01241) ([DenseNet](https://arxiv.org/abs/1608.06993)+[SSD](https://arxiv.org/abs/1512.02325))\n- 128x48 input image and 50 target letters\n- 2 feature maps: (8,3) and (4,2)\n- aspect ratios: 1, 1/2, 2\n- 97.8% mAP with 2,345,774 parameters\n\n## Dataset\n- captcha images generated by [hutil.ext.captcha](https://github.com/sbl1996/pytorch-hrvvi-ext/blob/master/hutil/ext/captcha.py)\n- fonts: Microsoft YaHei, SimHei, Times New Roman, Computer Modern\n- font sizes: 28, 32, 36, 40, 44, 48\n- 30% random dots, 30% random curves and 20° rotate\n\n## Todo\n- generalize to more clear fonts\n`\nconst formatBox = (box) => {\n    const boxStr = box.bbox.map(Math.round).map(String).join(\", \")\n    const confidenceStr = (box.confidence * 100).toFixed(2) + '%'\n    const char = box.label\n    return {\n        bbox: boxStr,\n        confidence: confidenceStr,\n        char,\n    }\n}\n\nconst b64toBlob = (b64Data, contentType, sliceSize) => {\n    contentType = contentType || 'image/jpeg';\n    sliceSize = sliceSize || 512;\n\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n\n        byteArrays.push(byteArray);\n    }\n\n    var blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n}\n\nconst Demo = withStyles(styles)(({ classes }) => {\n    const [files, setFiles] = useState([])\n    const [predict, setPredict] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [preview, setPreview] = useState('')\n\n    const onDrop = (files) => {\n        const file = files[0]\n        console.log(file)\n        setFiles([file])\n        const url = URL.createObjectURL(file)\n        setPreview(url)\n    }\n\n    const onPredict = () => {\n        predictCaptcha(files[0])\n            .then(p => {\n                const detections = p.detections\n                setPredict(detections)\n                const blob = b64toBlob(p.img)\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n            })\n    }\n\n    const onGenerate = () => {\n        return genCaptcha()\n            .then(blob => {\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n            })\n    }\n\n    const onLoading = () => {\n        genCaptcha()\n            .then(blob => {\n                const file = new File([blob], \"captcha.jpg\")\n                setFiles([file])\n                const url = URL.createObjectURL(file)\n                setPreview(url)\n                predictCaptcha(file)\n                    .then(p => {\n                        const detections = p.detections\n                        setPredict(detections)\n\n                        const blob = b64toBlob(p.img)\n                        const file = new File([blob], \"captcha.jpg\")\n                        setFiles([file])\n                        const url = URL.createObjectURL(file)\n                        setPreview(url)\n                    })\n            })\n    }\n\n    useEffect(() => {\n        onLoading()\n    }, [loading])\n    return (\n        <Paper className={classes.paper}>\n            <Grid container>\n                <Grid item md={6} sm={12}>\n                    <Card className={classes.demo}>\n                        <CardContent className={classes.captchaTitle}>\n                            <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" gutterBottom>\n                                <div className={classes.captchaTitleText}>\n                                    Captcha Recognation\n                                </div>\n                            </Typography>\n                        </CardContent>\n                        <CardMedia\n                            title=\"CAPTCHA image\"\n                            image={preview}\n                            className={classes.media}\n                        >\n                        </CardMedia>\n                        <CardActions className={classes.actions} disableActionSpacing>\n                            <Grid container>\n                                <Grid item md={4} sm={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        className={classes.uploadButton}\n                                        onClick={onGenerate}\n                                    >\n                                        Generate\n                                        <RefreshIcon />\n                                    </Button>\n\n                                </Grid>\n                                <Grid item md={4} sm={6} className={classes.upload}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept=\"image/*\"\n                                        onDrop={onDrop}\n                                        disableClick={true}\n                                    >\n                                        {({ getRootProps, getInputProps, open }) => (\n                                            <div {...getRootProps()}>\n                                                <input {...getInputProps()} />\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"default\"\n                                                    className={classes.uploadButton}\n                                                    onClick={open}\n                                                >\n                                                    Upload\n                                        <CloudUploadIcon />\n                                                </Button>\n                                            </div>\n                                        )}\n                                    </Dropzone>\n                                </Grid>\n                                <Grid item md={4} sm={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"default\"\n                                        className={classes.predictButton}\n                                        onClick={onPredict}\n                                    >\n                                        Predict\n                                        <SearchIcon />\n                                    </Button>\n\n                                </Grid>\n                                <Grid item md={12} sm={12} align='center'>\n                                    <Paper className={classes.tablePaper}>\n                                        <Table className={classes.table}>\n                                            <TableBody>\n                                                {predict.map(formatBox).map((box, i) => (\n                                                    <TableRow key={i}>\n                                                        <TableCell>{box.char}</TableCell>\n                                                        <TableCell>{box.confidence}</TableCell>\n                                                        <TableCell align='left'>{box.bbox}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </CardActions>\n                    </Card>\n                </Grid>\n\n                <Grid item md={6} sm={12}>\n                    <Card className={classes.summary}>\n                        <CardContent>\n                            <Markdown className={classes.markdown}>\n                                {summary}\n                            </Markdown>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Paper >\n    )\n})\n\nexport default withStyles(styles)(Demo)","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Sidebar from './Sidebar'\nimport * as R from 'ramda'\nimport Markdown from './Markdown'\n\n\n\nconst styles = theme => ({\n    mainGrid: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    markdown: {\n        padding: `${theme.spacing.unit * 3}px 0`,\n    },\n});\n\n\nconst PostList = withStyles(styles)(({ classes, posts, loading }) => {\n    return (\n        <Grid container spacing={40} className={classes.mainGrid}>\n            {loading ?\n                <Grid item xs={12} md={8}>\n                    <CircularProgress></CircularProgress>\n                </Grid>\n                :\n                <MainContent post={posts.length > 0 ? posts[0] : { content: '' }} />\n            }\n            <Sidebar />\n            {\n                R.tail(posts).map((post) => (\n                    <MainContent key={post.title} post={post} />\n                ))\n            }\n        </Grid>\n    );\n})\n\n\nconst MainContent = withStyles(styles)(({ classes, post }) => {\n    return (\n        <Grid item xs={12} md={8}>\n            <div>\n                <Divider />\n                <Markdown className={classes.markdown}>\n                    {post.content}\n                </Markdown>\n            </div>\n        </Grid>\n    )\n})\n\nexport default PostList;","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getPostsByMonth } from '../api/posts'\nimport PostList from './PostList'\n\n\n\nconst styles = theme => ({\n    markdown: {\n        padding: `${theme.spacing.unit * 3}px 0`,\n    },\n});\n\nconst PostMonthView = ({ classes, match }) => {\n    const month = match.params.date\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPosts = async (month) => {\n        setLoading(true)\n        const posts = await getPostsByMonth(month)\n        setPosts(posts)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPosts(month)\n        window.scrollTo(0, 0);\n    }, [month])\n\n    return (\n        <PostList posts={posts} loading={loading} classes={classes} />\n    )\n}\n\nexport default withStyles(styles)(PostMonthView);","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { searchPosts } from '../api/posts'\nimport PostList from './PostList'\n\n\nconst styles = theme => ({\n});\n\nconst PostMonthView = ({ classes, match }) => {\n    const keyword = match.params.keyword\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true)\n\n    const fetchPosts = async (month) => {\n        setLoading(true)\n        const posts = await searchPosts(keyword)\n        setPosts(posts)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchPosts(keyword)\n        window.scrollTo(0, 0);\n    }, [keyword])\n\n    return (\n        <PostList posts={posts} loading={loading} classes={classes} />\n    )\n}\n\nexport default withStyles(styles)(PostMonthView);","import React from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport Layout from './components/Layout'\nimport Blog from './components/Blog'\nimport Demo from './components/Demo'\nimport PostMonthView from './components/PostMonthView'\nimport PostSearchView from './components/PostSearchView'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport hljs from 'highlight.js/lib/highlight'\nimport 'highlight.js/styles/github.css'\nimport python from 'highlight.js/lib/languages/python'\nhljs.registerLanguage('python', python)\n\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        useNextVariants: true,\n    }\n});\n\nconst App = () => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Router>\n                <Layout>\n                    <Route exact path=\"/\" component={Blog} />\n                    <Route path=\"/demo\" component={Demo} />\n                    <Route path=\"/about\" component={About} />\n                    <Route path=\"/posts/search/:keyword\" component={PostSearchView} />\n                    <Route exact path=\"/posts/:date\" component={PostMonthView} />\n                </Layout>\n            </Router>\n        </MuiThemeProvider>\n    )\n}\n\nconst About = () => <h2>About</h2>;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}